{"ast":null,"code":"var _jsxFileName = \"Y:\\\\Coding\\\\bizCards\\\\src\\\\components\\\\myCards.jsx\",\n  _s = $RefreshSig$();\nimport PageHeader from \"./common/pageHeader\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"./card\";\nimport { useMyCards } from \"../hooks/useMyCards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyCards = ({\n  biz = false,\n  search = \"\"\n}) => {\n  _s();\n  const cards = useMyCards();\n  function displayCards() {\n    const mapCards = cards.map(card => {\n      /*#__PURE__*/_jsxDEV(Card, {\n        card: card\n      }, card._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 10\n      }, this);\n    });\n    if (search) {}\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"My Cards\",\n      description: \"your cards are in the list below\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create-card\",\n        children: \"Create a New Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: !cards.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"no cards...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }, this) : cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        card: card\n      }, card._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 36\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n_s(MyCards, \"lFJzR/5YXaA/UR2xlZbmE9dH+DE=\", false, function () {\n  return [useMyCards];\n});\n_c = MyCards;\nexport default MyCards;\nvar _c;\n$RefreshReg$(_c, \"MyCards\");","map":{"version":3,"names":["PageHeader","Link","Card","useMyCards","jsxDEV","_jsxDEV","Fragment","_Fragment","MyCards","biz","search","_s","cards","displayCards","mapCards","map","card","_id","fileName","_jsxFileName","lineNumber","columnNumber","children","title","description","className","to","length","_c","$RefreshReg$"],"sources":["Y:/Coding/bizCards/src/components/myCards.jsx"],"sourcesContent":["import PageHeader from \"./common/pageHeader\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"./card\";\r\nimport { useMyCards } from \"../hooks/useMyCards\";\r\n\r\nconst MyCards = ({ biz = false, search = \"\" }) => {\r\n   const cards = useMyCards();\r\n\r\n   function displayCards() {\r\n      const mapCards = cards.map((card) => {\r\n         <Card card={card} key={card._id} />;\r\n      });\r\n      if (search) {\r\n      }\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <PageHeader\r\n            title=\"My Cards\"\r\n            description=\"your cards are in the list below\"\r\n         />\r\n\r\n         <div className=\"row\">\r\n            <Link to=\"/create-card\">Create a New Card</Link>\r\n         </div>\r\n\r\n         <div className=\"row\">\r\n            {!cards.length ? (\r\n               <p>no cards...</p>\r\n            ) : (\r\n               cards.map((card) => <Card card={card} key={card._id} />)\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default MyCards;\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,qBAAqB;AAC5C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,UAAU,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjD,MAAMC,OAAO,GAAGA,CAAC;EAAEC,GAAG,GAAG,KAAK;EAAEC,MAAM,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAMC,KAAK,GAAGT,UAAU,CAAC,CAAC;EAE1B,SAASU,YAAYA,CAAA,EAAG;IACrB,MAAMC,QAAQ,GAAGF,KAAK,CAACG,GAAG,CAAEC,IAAI,IAAK;MAClC,aAAAX,OAAA,CAACH,IAAI;QAACc,IAAI,EAAEA;MAAK,GAAMA,IAAI,CAACC,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IACtC,CAAC,CAAC;IACF,IAAIX,MAAM,EAAE,CACZ;EACH;EAEA,oBACGL,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACGjB,OAAA,CAACL,UAAU;MACRuB,KAAK,EAAC,UAAU;MAChBC,WAAW,EAAC;IAAkC;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eAEFhB,OAAA;MAAKoB,SAAS,EAAC,KAAK;MAAAH,QAAA,eACjBjB,OAAA,CAACJ,IAAI;QAACyB,EAAE,EAAC,cAAc;QAAAJ,QAAA,EAAC;MAAiB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eAENhB,OAAA;MAAKoB,SAAS,EAAC,KAAK;MAAAH,QAAA,EAChB,CAACV,KAAK,CAACe,MAAM,gBACXtB,OAAA;QAAAiB,QAAA,EAAG;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAElBT,KAAK,CAACG,GAAG,CAAEC,IAAI,iBAAKX,OAAA,CAACH,IAAI;QAACc,IAAI,EAAEA;MAAK,GAAMA,IAAI,CAACC,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IACzD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACP,CAAC;AAET,CAAC;AAACV,EAAA,CA/BIH,OAAO;EAAA,QACIL,UAAU;AAAA;AAAAyB,EAAA,GADrBpB,OAAO;AAiCb,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}